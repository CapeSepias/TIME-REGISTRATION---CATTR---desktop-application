stages:
  - build
  - deploy

build-linux:
  stage: build
  tags:
    - linux
  only:
    - release
  image: node:fermium-slim
  artifacts:
    untracked: false
    expire_in: 30 days
    paths:
      - "target/*.AppImage"
      - "target/*.tar.gz"
      - "target/*.deb"
      - "target/manifests/*.json"
  script:
    - apt update
    - apt install -y build-essential python3 pkg-config libsecret-1-0 libsecret-1-dev ca-certificates openssh-client dpkg-dev dpkg-sig

    - npm ci
    - npm run build-production

    - npm run package-linux

build-mac:
  stage: build
  tags:
    - macos
  only:
    - release
  artifacts:
    untracked: false
    expire_in: 30 days
    paths:
      - "target/*.dmg"
      - "target/manifests/*.json"
  script:
    - security unlock-keychain -p "$APPLE_CI_HOST_PASSWORD"

    - npm ci
    - npm run build-production

    - npm run package-mac

build-windows:
  stage: build
  tags:
    - windows
  only:
    - release
  artifacts:
    untracked: false
    expire_in: 30 days
    paths:
      - "target/*.exe"
      - "target/*.appx"
      - "target/manifests/*.json"
  script:
    - npm ci
    - npm run build-production

    - npm run package-windows

deploy:
  stage: deploy
  tags:
    - docker
  only:
    refs:
      - tags
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client gnupg
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - eval $(ssh-agent -s)
    - echo "$CI_SSH_KEY" | base64 -d | ssh-add
    - gpg-agent --daemon
    - echo -e "$DEB_SIGNING_KEY" | base64 -d |  gpg --import
    - RELEASE_VERSION=`(echo $CI_COMMIT_TAG | sed 's/^v//')`
  script:
    - ssh cattr-deploy@dl.cattr.app mkdir -p "/srv/dl/desktop/$RELEASE_VERSION"
    - cd target
    - scp *.dmg "cattr-deploy@dl.cattr.app:/srv/dl/desktop/$RELEASE_VERSION/"
    - scp *.exe "cattr-deploy@dl.cattr.app:/srv/dl/desktop/$RELEASE_VERSION/"
    - scp *.tar.gz "cattr-deploy@dl.cattr.app:/srv/dl/desktop/$RELEASE_VERSION/"
    - scp *.AppImage "cattr-deploy@dl.cattr.app:/srv/dl/desktop/$RELEASE_VERSION/"
    - scp *.deb "cattr-deploy@dl.cattr.app:/srv/dl/packages/deb/amd64/"
    - cd manifests
    - scp * cattr-deploy@dl.cattr.app:/srv/dl/manifests/
  after_script:
    - ssh cattr-deploy@dl.cattr.app "cd /srv/dl/packages/deb && apt-ftparchive --arch amd64 packages amd64 > Packages"
    - ssh cattr-deploy@dl.cattr.app "cd /srv/dl/packages/deb && apt-ftparchive release . > Release"
    - scp "cattr-deploy@dl.cattr.app:/srv/dl/packages/deb/Release" .
    - gpg -abs -o Release.gpg Release
    - gpg --clearsign -o InRelease Release
    - scp Release.gpg "cattr-deploy@dl.cattr.app:/srv/dl/packages/deb/"
    - scp InRelease "cattr-deploy@dl.cattr.app:/srv/dl/packages/deb/"
